{"version":3,"sources":["webpack:///./client/components/Loader.js","webpack:///./client/pages/VerifyEmail.js","webpack:///./client/shared/TextError.js"],"names":["props","color","VerifyEmail","dispatch","useDispatch","useState","showLoader","setShowLoader","submitHandler","value","verifyEmailAddress","body","onSuccess","res","toast","success","history","replace","onEnd","resendEmail","alert","resendVerificationEmail","renderVerifyForm","verificationCode","Yup","min","max","required","TextError","backgroundColor","borderColor","padding","renderLoader","marginTop","paddingTop","children"],"mappings":"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","file":"pages-VerifyEmail.4b7877d7a987adc62170.js","sourcesContent":["import React from \"react\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\n\r\nexport default (props) => {\r\n  const { color = \"#00acf0\" } = props;\r\n  return <BounceLoader color={color} />;\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Card } from \"react-bootstrap\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport TextError from \"../shared/TextError\";\r\n\r\nimport LogoImage from \"../assets/temp/logo.png\";\r\nimport Loader from \"../components/Loader\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { verifyEmailAddress, resendVerificationEmail } from \"../store/api/auth\";\r\nimport { toast } from \"react-toastify\";\r\nimport ToastBody from \"../components/ToastBody\";\r\n\r\nconst VerifyEmail = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [showLoader, setShowLoader] = useState(false);\r\n\r\n  const submitHandler = (value) => {\r\n    setShowLoader(true);\r\n    dispatch(\r\n      verifyEmailAddress({\r\n        body: value,\r\n        onSuccess: (res) => {\r\n          toast.success(\r\n            <ToastBody\r\n              title=\"Email Verified\"\r\n              message=\"Your email address has been verified.\"\r\n            />\r\n          );\r\n          props.history.replace(\"/\");\r\n        },\r\n        onEnd: () => {\r\n          setShowLoader(false);\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const resendEmail = () => {\r\n    alert(\"anc\");\r\n    setShowLoader(true);\r\n    dispatch(\r\n      resendVerificationEmail({\r\n        onSuccess: () => {\r\n          toast.success(\r\n            <ToastBody\r\n              title=\"Email Sent\"\r\n              message=\"We have sent you another verification email\"\r\n            />\r\n          );\r\n        },\r\n        onEnd: () => {\r\n          setShowLoader(false);\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const renderVerifyForm = () => {\r\n    return (\r\n      <Formik\r\n        initialValues={{ verificationCode: \"\" }}\r\n        onSubmit={submitHandler}\r\n        validationSchema={Yup.object({\r\n          verificationCode: Yup.string()\r\n            .min(6, \"Verification Code must be 6 characters long\")\r\n            .max(6, \"Verification Code must be 6 characters long\")\r\n            .required(\"Enter Verification Code\"),\r\n        })}\r\n      >\r\n        {({}) => {\r\n          return (\r\n            <Form>\r\n              <div className=\"form-group\">\r\n                <div className=\"covering\">\r\n                  <Field\r\n                    type=\"text\"\r\n                    className=\"form-control border\"\r\n                    placeholder=\"Enter 6 Digit Verification Code\"\r\n                    name=\"verificationCode\"\r\n                  />\r\n                  <ErrorMessage name=\"verificationCode\" component={TextError} />\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-primary btn-block \"\r\n                style={{\r\n                  backgroundColor: \"#00acf0\",\r\n                  borderColor: \"#00acf0\",\r\n                  padding: \"10px 10px\",\r\n                }}\r\n              >\r\n                Verify\r\n              </button>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    );\r\n  };\r\n\r\n  const renderLoader = () => {\r\n    return (\r\n      <div className=\"overlapping-loader\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div style={{ marginTop: \"10px\", paddingTop: \"228px\" }}>\r\n      <div className=\"container\">\r\n        <div className=\"py-5 verify-email-form-wrapper\">\r\n          <Card className=\"verify-email-form shadow p-4 position-relative\">\r\n            {showLoader && renderLoader()}\r\n            <h3 className=\"text-center mb-3\">Verify Your Account</h3>\r\n            {renderVerifyForm()}\r\n\r\n            <p className=\"mt-3 mb-0 resend-text text-muted\">\r\n              We have sent you a verification code to your email address, Please\r\n              check your junk/spam folder as well. If you haven't recieved any\r\n              email click\r\n              <a onClick={resendEmail}>\r\n                <strong>Resend</strong>\r\n              </a>\r\n              .\r\n            </p>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyEmail;\r\n","import React from \"react\";\r\n\r\nfunction TextError(props) {\r\n  return (\r\n    <>{props.children && <div className=\"error mr-3\">{props.children}</div>}</>\r\n  );\r\n}\r\n\r\nexport default TextError;\r\n"],"sourceRoot":""}