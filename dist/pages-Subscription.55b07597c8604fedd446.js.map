{"version":3,"sources":["webpack:///./client/pages/Subscription.js"],"names":["FreeVideos","props","dispatch","useDispatch","useState","selectedCategory","setStelectedCategory","categoryName","setCategoryName","categories","useSelector","state","entities","courses","authToken","auth","token","subscriptionPlans","subscriptionPageCMS","ui","subscriptionPage","data","filteredCategoriesList","useMemo","list","filter","cat","coursesInCategory","c","_id","category","length","useEffect","name","find","match","params","id","getFreeVideosImageSec","renderCategories","map","e","preventDefault","renderSubscriptionCards","plansForThisCategory","sp","subscriptinPlan","setLoginModalVisibility","storage","store","visible","plan","setSubscriptionModal","cardImage","metaTitle","metaDescription","metaKeyWords","marginTop","image","heading","renderHTML","text","display","justifyContent","text2","loadData","matchedRoute","getState","promiseArray","push","Promise","all"],"mappings":"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","file":"pages-Subscription.55b07597c8604fedd446.js","sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFreeVideosImageSec } from \"../store/api/subscriptionPageCms\";\nimport { setSubscriptionModal } from \"../store/ui/subscriptionModal\";\nimport { setLoginModalVisibility } from \"../store/ui/loginModal\";\nimport storage from \"../services/storage\";\nimport renderHTML from \"react-render-html\";\nimport { Helmet } from \"react-helmet\";\n\nconst FreeVideos = (props) => {\n  const dispatch = useDispatch();\n  const [selectedCategory, setStelectedCategory] = useState(\"\");\n  const [categoryName, setCategoryName] = useState(\"\");\n  const categories = useSelector((state) => state.entities.categories);\n  const courses = useSelector((state) => state.entities.courses);\n  const authToken = useSelector((state) => state.auth.token);\n\n  const subscriptionPlans = useSelector(\n    (state) => state.entities.subscriptionPlans\n  );\n  const subscriptionPageCMS = useSelector(\n    (state) => state.ui.subscriptionPage.data\n  );\n\n  const filteredCategoriesList = useMemo(() => {\n    return categories.list.filter((cat) => {\n      const coursesInCategory = courses.list.filter((c) => {\n        return cat._id === c.category._id;\n      });\n      return coursesInCategory.length > 0;\n    });\n  }, [categories.list, courses.list]);\n\n  useEffect(() => {\n    if (!selectedCategory && filteredCategoriesList[0]) {\n      setCategoryName(filteredCategoriesList[0].name);\n      setStelectedCategory(filteredCategoriesList[0]._id);\n    }\n  }, [filteredCategoriesList]);\n\n  useEffect(() => {\n    const category = categories.list.find((c) => {\n      return c._id === props.match.params.category;\n    });\n    const name = category ? category.name : categories.list[0].name;\n    const id = category ? category._id : categories.list[0]._id;\n    if (!selectedCategory) {\n      setCategoryName(name);\n      setStelectedCategory(id);\n    }\n    dispatch(getFreeVideosImageSec({}));\n  }, []);\n\n  const renderCategories = () => {\n    return (\n      <>\n        {(filteredCategoriesList || []).map((cat) => {\n          return (\n            <li\n              className=\"nav-item\"\n              role=\"presentation\"\n              key={cat._id + \"home course\"}\n            >\n              <a\n                className={\n                  selectedCategory === cat._id ? \"nav-link active\" : \"nav-link\"\n                }\n                onClick={(e) => {\n                  e.preventDefault();\n                  setStelectedCategory(cat._id);\n                  setCategoryName(cat.name);\n                }}\n                id=\"marketing-tab\"\n                data-toggle=\"tab\"\n                role=\"tab\"\n                aria-controls=\"marketing\"\n                aria-selected=\"false\"\n              >\n                {cat.name}\n              </a>\n            </li>\n          );\n        })}\n      </>\n    );\n  };\n\n  const renderSubscriptionCards = () => {\n    if (!selectedCategory) return null;\n    const plansForThisCategory = subscriptionPlans.list.filter(\n      (sp) => sp.category._id === selectedCategory\n    );\n\n    return (\n      <div className=\"row justify-content-center\">\n        {plansForThisCategory.map((subscriptinPlan) => {\n          return (\n            <div className=\"col-sm-4 mt-3\">\n              <div className=\"mx-5 mx-md-0\">\n                <a\n                  href=\"#\"\n                  onClick={(e) => {\n                    e.preventDefault();\n\n                    if (!authToken) {\n                      dispatch(setLoginModalVisibility(true));\n                      storage.store(\"GO_TO_SUBSCRIPTION\", {\n                        visible: true,\n                        category: selectedCategory,\n                        plan,\n                      });\n                      return;\n                    }\n\n                    dispatch(\n                      setSubscriptionModal({\n                        visible: true,\n                        category: selectedCategory,\n                        plan: subscriptinPlan,\n                      })\n                    );\n                  }}\n                >\n                  <img className=\"w-100\" src={subscriptinPlan.cardImage} />\n                </a>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <Helmet>\n        <meta property=\"og:title\" content={subscriptionPageCMS.metaTitle} />\n        <meta\n          name=\"description\"\n          content={subscriptionPageCMS.metaDescription}\n        />\n        <meta name=\"keywords\" content={subscriptionPageCMS.metaKeyWords} />\n      </Helmet>\n\n      <div className=\"container\" style={{ marginTop: \"200px\" }}>\n        <img className=\"w-100\" src={subscriptionPageCMS.image} />\n      </div>\n      <div className=\"container\">\n        <h2 className=\"text-center mt-4\">{subscriptionPageCMS.heading}</h2>\n      </div>\n      <div className=\"container mt-2 subscription-page-top-text\">\n        {renderHTML(subscriptionPageCMS.text)}\n      </div>\n\n      <div>\n        <section className=\"popular\">\n          <div className=\"bg_cover\">\n            <div className=\"container\">\n              <h2>\n                {categoryName ? categoryName + \" \" : \"All \"}Subscription Plans\n              </h2>\n              <ul className=\"nav nav-tabs\" id=\"courseTab\" role=\"tablist\">\n                {renderCategories()}\n              </ul>\n            </div>\n          </div>\n        </section>\n      </div>\n\n      <div className=\"container\">\n        <div\n          className=\"home_sub_top_text\"\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            marginTop: \"50px\",\n          }}\n        >\n          <div>{renderHTML(subscriptionPageCMS.text2)}</div>\n        </div>\n      </div>\n\n      <div className=\"container mb-5\" style={{ marginTop: \"30px\" }}>\n        {renderSubscriptionCards()}\n      </div>\n    </>\n  );\n};\n\nFreeVideos.loadData = ({ store, matchedRoute }) => {\n  const { token } = store.getState().auth;\n  const { dispatch } = store;\n  const promiseArray = [];\n  // if (token) {\n\n  // }\n  promiseArray.push(dispatch(getFreeVideosImageSec({})));\n  return Promise.all(promiseArray);\n};\n\nexport default FreeVideos;\n"],"sourceRoot":""}