{"version":3,"sources":["webpack:///./client/components/Loader.js","webpack:///./client/components/StartMcqs.js","webpack:///./client/components/StartQuiz.js","webpack:///./client/components/pagination.js"],"names":["props","color","StartMcqs","quizMcqs","setCurrentPage","currentPage","name","quizBankId","quizBankQA","useState","practice","setpractice","solved","setSolved","dispatch","useDispatch","history","useHistory","fuck","initialValues","op","onSubmit","values","as","as2","age","role","push","console","log","handleChangew","e","question","correctAnswer","options","explanation","solvedMcQ","answer","target","value","save","user","localStorage","getItem","JSON","parse","_id","postRecord","body","quizBank","solvedQuiz","onSuccess","res","map","fl","handleChange","handleBlur","handleSubmit","errors","touched","index","StartQuiz","SetQuizMcqs","params","useParams","showLoader","setShowLoader","loading","setLoading","postsPerPage","setName","setQuizBankId","setQuizBankQA","useEffect","loadQAMcqs","id","data","mcqs","length","renderLoader","indexOfLastPost","indexOfFirstPost","currentPosts","slice","howManyPages","Math","ceil","marginTop","textAlign","Pagination","pages","crntBtn","numberOfPages","i","currentButton","setCurrentButton","arrOfCurrButtons","setArrOfCurrButtons","tempNumberOfPages","dotsInitial","dotsLeft","dotsRight","sliced","sliced1","sliced2","clickNext","prev","item","backgroundColor"],"mappings":"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","file":"components-StartQuiz.49386a0d0787c52fda9d.js","sourcesContent":["import React from \"react\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\n\r\nexport default (props) => {\r\n  const { color = \"#00acf0\" } = props;\r\n  return <BounceLoader color={color} />;\r\n};\r\n","import React, { useState } from \"react\";\nimport { Formik, ErrorMessage } from \"formik\";\nimport { postRecord } from \"../store/api/quizBank\";\nimport { useDispatch } from \"react-redux\";\nimport {  useHistory } from \"react-router-dom\";\n\nexport default function StartMcqs({ quizMcqs, setCurrentPage, currentPage, name ,quizBankId, quizBankQA }) {\n  const [practice, setpractice] = useState([]);\n  const [solved, setSolved] = useState([]);\n  const dispatch = useDispatch();\n  // const navigate = useNavigate();\n  const history = useHistory()\nconst fuck ={\n    0: \"A\",\n    1:\"B\",\n    2:\"C\",\n    3:\"D\"\n}\n  // useState\n  const initialValues = {\n    op: \"\",\n    // description: \"\",\n    // image: \"\",\n  };\n  const onSubmit = async (values) => {\n    var as = {};\n    var as2 = {\n      name: \"ali\",\n      age: 30,\n      role: \"admin\",\n    };\n    practice.push(as, as2);\n    console.log(\"asdasd====\", practice);\n    console.log(\"value-===>>\", values);\n    // localStorage.setItem(\"haris\", \"hr\")\n  };\n\n  const handleChangew = (e, question, correctAnswer, options, explanation) => {\n      const solvedMcQ = {\n          answer:[e.target.value],\n          question: question,\n          correctAnswer:correctAnswer,\n          options:options,\n          explanation:explanation\n        }\n        setSolved([...solved, solvedMcQ]);\n        // setCurrentPage(currentPage+1);\n        console.log(\"handleChange==>>\", e.target, question);\n\n  };\n\n  const save =()=>{\n    console.log(\"name000===>>\",name)\n    console.log(\"quiz id===>>\",quizBankId)\n    console.log(\"quiz QA id===>>\",quizBankQA)\nlet user=localStorage.getItem(\"user\")\nuser=JSON.parse(user)\nconsole.log(\"user===> \", user._id)\n    console.log(solved);\n    dispatch(\n        postRecord({\n            body:{\n               \n                name:name,\n                quizBank:quizBankId,\n               user: user._id,\n               quizBankQA:quizBankQA,\n                solvedQuiz:solved,\n\n            },\n            onSuccess: (res) => {\n                console.log(\"res\", res)\n          //  navigate(\"/quiz-result\");\n           history.push(\"/quiz-result\");\n\n            }\n\n        }))\n  }\n  return (\n    <>\n      {quizMcqs?.map((fl) => {\n        console.log(\"fl===> \", fl)\n        return (\n          <>\n          \n            <div className=\"question_wrap_step\">\n              <h5 className=\"sub_heading mb-3\">{fl.question}</h5>\n              <div class=\"lender-with-cross\">\n                <Formik\n                  initialValues={initialValues}\n                  //   validationSchema={validationSchema}\n                  onSubmit={onSubmit}\n                  //   onSubmit={(values) => {\n                  //     console.log(\"feedback values\", values);\n                  //   }}\n                >\n                  {({\n                    values,\n                    handleChange,\n                    handleBlur,\n                    handleSubmit,\n                    errors,\n                    touched,\n                  }) => (\n                    <>\n                      <ul>\n                        {fl.options?.map((op, index) => {\n                          return (\n                            <>\n                              <li class=\"option\">\n                                <input\n                                  type=\"radio\"\n                                  name=\"op\"\n                                  onChange={(e) =>\n                                    handleChangew(e, fl.question, fl.correctAnswer, fl.options, fl.explanation)\n                                  }\n                                  onBlur={handleBlur(\"op\")}\n                                     value={op}\n                                  // name=\"op\"\n                                  id={op}\n                                  class=\"custom-checkbox\"\n                                />\n                                <label class=\"bankClkTrack\" for={op}>\n                                  <span class=\"option_title title_1\">{op}</span>\n                                </label>\n                                <span className=\"nubmer\">{fuck[index]}</span>\n                              </li>\n                            </>\n                          );\n                        })}\n                        {/* \t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<li class=\"option\">\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"lightest-gas\" id=\"Hydrogen\" class=\"custom-checkbox\" />\n\t\t\t\t\t\t\t\t<label class=\"bankClkTrack\" for=\"Hydrogen\"><span class=\"option_title title_1\">{fl.options}</span></label>\n                <span className='nubmer'>2</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li class=\"option\">\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"lightest-gas\" id=\"Carbon_dioxide\" class=\"custom-checkbox\" />\n\t\t\t\t\t\t\t\t<label class=\"bankClkTrack\" for=\"Carbon_dioxide\"><span class=\"option_title title_1\">   Carbon dioxide</span></label>\n                <span className='nubmer'>3</span>\n\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t<li class=\"option\">\n\t\t\t\t\t\t\t\t<input type=\"radio\" name=\"lightest-gas\" id=\"Argon\" class=\"custom-checkbox\" />\n\t\t\t\t\t\t\t\t<label class=\"bankClkTrack\" for=\"Argon\"><span class=\"option_title title_1\"> Argon</span></label>\n                <span className='nubmer'>4</span>\n\t\t\t\t\t\t\t</li> */}\n                      </ul>\n                      \n                    </>\n                  )}\n                </Formik>\n                \n              </div>\n            </div>\n          </>\n        );\n      })}\n      {/* <button onClick={save}>saaaaaave</button> */}\n      <div className='btn_wrap flex-columan sav-paus'>\n          <button className='btn btn_previs mr-2'>Pause</button>\n          <button className='btn btn-danger2' \n          onClick={save}\n          >Save & Exit</button>\n        </div>\n    </>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { loadQAMcqs } from \"../store/api/quizBank\";\nimport { useParams } from \"react-router-dom\";\nimport Loader from \"./Loader\";\nimport StartMcqs from \"./StartMcqs\";\nimport Pagination from \"./pagination\";\n\nexport default function StartQuiz() {\n  const [quizMcqs, SetQuizMcqs] = useState(\"\");\n  const dispatch = useDispatch();\n  const params = useParams();\n  const [showLoader, setShowLoader] = useState(false);\n  const [loading, setLoading] = useState(false)\n  const [currentPage, setCurrentPage] = useState(1)\n  const [postsPerPage] = useState(1)\n  const [name , setName]= useState(\"\")\n  const [quizBankId , setQuizBankId]= useState(\"\")\n  const [quizBankQA , setQuizBankQA]= useState(\"\")\n    useEffect(() => {\n        setLoading(true)\n        dispatch(\n            loadQAMcqs({\n                id: params.id,\n            onSuccess: (res) => {\n                SetQuizMcqs(res.data.data.quizBankQA.mcqs);\n              console.log(\"mcqs=======>>>\", res.data.data.quizBankQA.mcqs.length);\n              console.log(\"startQuiz=====>>>\", res)\n              setName(res.data.data.quizBankQA.name)\n              setQuizBankId(res.data.data.quizBankQA.quizBank)\n              setQuizBankQA(res.data.data.quizBankQA._id)\n              console.log(\"name quizchp===>\", res.data.data.quizBankQA.name)\n              setLoading(false)\n            },\n            // onEnd: () => {\n   \n            //   },\n          })\n        );\n      }, []);\n      const renderLoader = () => {\n        return (\n          <div className=\"overlapping-loader\">\n            <Loader />\n          </div>\n        );\n      };\n\n      if (loading && quizMcqs.length === 0) {\n        return <h2>Loading...</h2>\n      }\n      //Get current posts\n      const indexOfLastPost = currentPage * postsPerPage;\n      const indexOfFirstPost = indexOfLastPost - postsPerPage;\n      // const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost)\n      const currentPosts = quizMcqs.slice(indexOfFirstPost, indexOfLastPost)\n      const howManyPages = Math.ceil(quizMcqs.length/postsPerPage)\n  return (\n    <>\n    \n    <div\n    \n    \n    style={{\n        marginTop: \"15%\",\n      }}\n    ></div>\n    <div className='quiz_head'>\n\t\t<h1> {name}</h1> </div>\n        <h6 className='sub_heading text-center mt-4'\n        \n        style={{textAlign:\"center\"}}\n        >COMPLETE QUIZ BANK</h6>\n\n   {/* {showLoader && renderLoader()} */}\n   {/* {quizMcqs !== \"\" ? (\n<>\n\n{quizMcqs.quizBankQA.mcqs?.map((fl) => {\n                      return (\n                        <>\n                        \n                        <h1> {fl.question}</h1>\n                        \n                        \n                        \n                        \n                        </>\n                      )})}\n\n</>\n    \n   ):(\n    <></>\n   )} */}\n   <div className=\"wrap-quiz-start\">\n   \t<div className='quiz_paper mt-5'>\n       <div className='quiz_paper_head'>\n\t\t\t\t\t<div className='content'>\n\t\t\t\t\t\t{/* <h6 className='sub_heading'>Question 13</h6> */}\n\t\t\t\t\t\t<p className='theme_para'>Total Questions: <span><b>{quizMcqs.length}</b></span></p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='time'>\n\t\t\t\t\t\t<p className='theme_para'>Time : <span className='text-danger'><b>25:07</b></span></p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n  <Pagination crntBtn = {currentPage} pages = {howManyPages} setCurrentPage={setCurrentPage}/>\n\n   {quizMcqs !== \"\" ? (\n\n    <>\n\n <StartMcqs  name={name}   quizBankId={quizBankId} quizBankQA={quizBankQA}  currentPage = {currentPage} setCurrentPage={setCurrentPage} quizMcqs={currentPosts}/>\n </>\n ):(null)}\n  \n                </div>\n                </div>\n \n                {/* <div className='btn_wrap flex-columan'>\n          <button className='btn btn_previs mr-2'>Pause</button>\n          <button className='btn btn-danger2'>Save & Exit</button>\n        </div> */}\n\n </>\n  )\n}\n","import React, { useState, useEffect } from \"react\";\n\nfunction Pagination({ pages = 10, setCurrentPage, crntBtn }) {\n    console.log({crntBtn});\n  //Set number of pages\n  const numberOfPages = [];\n  for (let i = 1; i <= pages; i++) {\n    numberOfPages.push(i);\n  }\n\n  // Current active button number\n  const [currentButton, setCurrentButton] = useState(crntBtn);\n\n  // Array of buttons what we see on the page\n  const [arrOfCurrButtons, setArrOfCurrButtons] = useState([]);\n\n  useEffect(() => {\n    let tempNumberOfPages = [...arrOfCurrButtons];\n\n    let dotsInitial = \"...\";\n    let dotsLeft = \"... \";\n    let dotsRight = \" ...\";\n\n    if (numberOfPages.length < 6) {\n      tempNumberOfPages = numberOfPages;\n    } else if (currentButton >= 1 && currentButton <= 3) {\n      tempNumberOfPages = [\n        1,\n        2,\n        3,\n        4,\n        5,\n        6,\n        7,\n        8,\n        9,\n        10,\n        11,\n        12,\n        13,\n        dotsInitial,\n        numberOfPages.length,\n      ];\n    } else if (currentButton === 13) {\n      const sliced = numberOfPages.slice(0, 13);\n      tempNumberOfPages = [...sliced, dotsInitial, numberOfPages.length];\n    } else if (currentButton > 12 && currentButton < numberOfPages.length - 2) {\n      // from 5 to 8 -> (10 - 2)\n      const sliced1 = numberOfPages.slice(currentButton - 2, currentButton); // sliced1 (5-2, 5) -> [4,5]\n      const sliced2 = numberOfPages.slice(currentButton, currentButton + 1); // sliced1 (5, 5+1) -> [6]\n      tempNumberOfPages = [\n        1,\n        dotsLeft,\n        ...sliced1,\n        ...sliced2,\n        dotsRight,\n        numberOfPages.length,\n      ]; // [1, '...', 4, 5, 6, '...', 10]\n    } else if (currentButton > numberOfPages.length - 13) {\n      // > 7\n      const sliced = numberOfPages.slice(numberOfPages.length - 13); // slice(10-4)\n      tempNumberOfPages = [1, dotsLeft, ...sliced];\n    } else if (crntBtn!==1 && currentButton === dotsInitial) {\n      // [1, 2, 3, 4, \"...\", 10].length = 6 - 3  = 3\n      // arrOfCurrButtons[3] = 4 + 1 = 5\n      // or\n      // [1, 2, 3, 4, 5, \"...\", 10].length = 7 - 3 = 4\n      // [1, 2, 3, 4, 5, \"...\", 10][4] = 5 + 1 = 6\n      setCurrentButton(arrOfCurrButtons[arrOfCurrButtons.length - 3] + 1);\n    } else if (crntBtn!==1 && currentButton === dotsRight) {\n      setCurrentButton(arrOfCurrButtons[3] + 2);\n    } else if (crntBtn!==1 && currentButton === dotsLeft) {\n      setCurrentButton(arrOfCurrButtons[3] - 2);\n    }\n\n    setArrOfCurrButtons(tempNumberOfPages);\n    setCurrentPage(currentButton);\n  }, [currentButton]);\n\n\n\n  const clickNext =()=>  setCurrentButton((prev) =>\n  prev >= numberOfPages.length ? prev : prev + 1\n)\n  return (\n    <>\n    <h6 className='sub_heading pa-ques'>Question :  {currentButton}</h6>\n      <div className=\"pagination-container\">\n        <a\n          // href=\"#\"\n          className={`${currentButton === 1 ? \"disabled\" : \"\"} `}\n          onClick={() =>\n            setCurrentButton((prev) => (prev <= 1 ? prev : prev - 1))\n          }\n        >\n          Prev\n        </a>\n\n        {arrOfCurrButtons.map((item, index) => {\n          return (\n            <a\n              //   href=\"#\"\n              key={index}\n              className={`${currentButton === item ? \"active\" : \"\"}`}\n              style={{\n                backgroundColor: `${currentButton === item ? \"#00b0f0\" : \"\"}`,\n              }}\n              onClick={() => setCurrentButton(item)}\n            >\n              {item}\n            </a>\n          );\n        })}\n\n        <a\n          // href=\"#\"\n          className={`${\n            currentButton === numberOfPages.length ? \"disabled\" : \"\"\n          }`}\n          onClick={() =>\n            setCurrentButton((prev) =>\n              prev >= numberOfPages.length ? prev : prev + 1\n            )\n          }\n        >\n          Next\n        </a>\n      </div>\n      <div className=\"btn_wrap pagination2-btn\">\n        <button\n          //   ÷className='btn btn_previs mr-2'\n          className={`btn btn_previs mr-2 ${\n            currentButton === 1 ? \"disabled\" : \"\"\n          } `}\n          onClick={() =>\n            setCurrentButton((prev) => (prev <= 1 ? prev : prev - 1))\n          }\n        >\n          Previous\n        </button>\n        <button\n          //    className='btn btn_previs'\n          // className={` ${currentButton === 1 ? 'disabled' : ''} `}\n          className={`btn btn_previs ${\n            currentButton === numberOfPages.length ? \"disabled\" : \"\"\n          }`}\n          onClick={() =>\n            setCurrentButton((prev) =>\n              prev >= numberOfPages.length ? prev : prev + 1\n            )\n          }\n        >\n          Next\n        </button>\n\n      </div>\n        {/* <h1 onClick={clickNext}>{currentButton}</h1> */}\n    </>\n  );\n}\n\nexport default Pagination;\n"],"sourceRoot":""}