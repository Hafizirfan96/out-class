{"version":3,"sources":["webpack:///./client/pages/StatPage.js"],"names":["MyChart","loadable","ssr","StatPage","props","courseId","match","params","dispatch","useDispatch","useState","chartData","setChartData","useEffect","getCourseQuizAnswers","id","onSuccess","res","dummyData","data","forEach","element","percentage","obtainedMarks","totalQuizMarks","push","label","quiz","name","value","paddingTop","width","chart","caption","subCaption","xAxisName","yAxisName","numberSuffix","theme"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA,IAAMA,OAAO,GAAGC,mEAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,eAAC;AAAA,WAAM,uPAAN;AAAA,GAAD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAC;AAAD;;AAAA;AAAA;AAAA,GAAwC;AAC9DC,KAAG,EAAE;AADyD,CAAxC,CAAxB;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AAAA,MAClBC,QADkB,GACLD,KAAK,CAACE,KAAN,CAAYC,MADP,CAClBF,QADkB;AAE1B,MAAMG,QAAQ,GAAGC,+DAAW,EAA5B;;AAF0B,kBAIQC,sDAAQ,CAAC,EAAD,CAJhB;AAAA;AAAA,MAInBC,SAJmB;AAAA,MAIRC,YAJQ;;AAK1BC,yDAAS,CAAC,YAAM;AACdL,YAAQ,CACNM,8EAAoB,CAAC;AACnBC,QAAE,EAAEV,QADe;AAEnBW,eAAS,EAAE,mBAACC,GAAD,EAAS;AAClB,YAAMC,SAAS,GAAG,EAAlB;AACAD,WAAG,CAACE,IAAJ,CAASA,IAAT,CAAcC,OAAd,CAAsB,UAACC,OAAD,EAAa;AACjC,cAAMC,UAAU,GACbD,OAAO,CAACE,aAAR,GAAwBF,OAAO,CAACG,cAAjC,GAAmD,GADrD;AAGAN,mBAAS,CAACO,IAAV,CAAe;AACbC,iBAAK,EAAEL,OAAO,CAACM,IAAR,CAAaC,IADP;AAEbC,iBAAK,EAAEP;AAFM,WAAf;AAID,SARD;AAUAV,oBAAY,CAACM,SAAD,CAAZ;AACD;AAfkB,KAAD,CADd,CAAR;AAmBD,GApBQ,CAAT;AAqBA,sBACE;AAAK,SAAK,EAAE;AAAEY,gBAAU,EAAE;AAAd;AAAZ,kBACE;AAAK,aAAS,EAAC;AAAf,kBACE,2DAAC,OAAD;AACE,SAAK,EAAE;AAAEC,WAAK,EAAE;AAAT,KADT;AAEE,QAAI,EAAC,UAFP;AAGE,cAAU,EAAC,MAHb;AAIE,SAAK,EAAC,MAJR;AAKE,cAAU,EAAE;AACVC,WAAK,EAAE;AACLC,eAAO,EAAE,EADJ;AAELC,kBAAU,EAAE,EAFP;AAGLC,iBAAS,EAAE,EAHN;AAILC,iBAAS,EAAE,EAJN;AAKLC,oBAAY,EAAE,GALT;AAMLC,aAAK,EAAE;AANF,OADG;AASVnB,UAAI,EAAER;AATI;AALd,IADF,CADF,CADF;AAuBD,CAjDD;;AAmDeR,uEAAf,E","file":"pages-StatPage.82342db11278c142e2c2.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport loadable from \"@loadable/component\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getCourseQuizAnswers } from \"../store/api/quizes\";\r\nconst MyChart = loadable(() => import(\"../components/MyChart\"), {\r\n  ssr: false,\r\n});\r\n\r\nconst StatPage = (props) => {\r\n  const { courseId } = props.match.params;\r\n  const dispatch = useDispatch();\r\n\r\n  const [chartData, setChartData] = useState([]);\r\n  useEffect(() => {\r\n    dispatch(\r\n      getCourseQuizAnswers({\r\n        id: courseId,\r\n        onSuccess: (res) => {\r\n          const dummyData = [];\r\n          res.data.data.forEach((element) => {\r\n            const percentage =\r\n              (element.obtainedMarks / element.totalQuizMarks) * 100;\r\n\r\n            dummyData.push({\r\n              label: element.quiz.name,\r\n              value: percentage,\r\n            });\r\n          });\r\n\r\n          setChartData(dummyData);\r\n        },\r\n      })\r\n    );\r\n  });\r\n  return (\r\n    <div style={{ paddingTop: \"220px\" }}>\r\n      <div className=\"container\">\r\n        <MyChart\r\n          style={{ width: \"100%\" }}\r\n          type=\"column2d\"\r\n          dataFormat=\"json\"\r\n          width=\"100%\"\r\n          dataSource={{\r\n            chart: {\r\n              caption: \"\",\r\n              subCaption: \"\",\r\n              xAxisName: \"\",\r\n              yAxisName: \"\",\r\n              numberSuffix: \"%\",\r\n              theme: \"fusion\",\r\n            },\r\n            data: chartData,\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StatPage;\r\n"],"sourceRoot":""}