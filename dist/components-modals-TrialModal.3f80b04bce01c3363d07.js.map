{"version":3,"sources":["webpack:///./client/components/Loader.js","webpack:///./client/components/PhoneInput.js","webpack:///./client/components/modals/TrialModal.js","webpack:///./client/shared/TextError.js","webpack:///./client/store/api/trialRequests.js"],"names":["props","color","MyInput","error","label","className","onChange","onChangeFormik","classes","phoneNumber","charAt","RegisterModal","trialModal","useSelector","state","ui","commonData","dispatch","useDispatch","useState","showLoader","setShowLoader","showCompletion","setShowCompletion","closeModal","setTrialModalVisibility","onSubmit","body","requestTrialApi","onSuccess","onEnd","renderLoader","renderTrialForm","name","email","Yup","required","typeError","values","setFieldValue","flexGrow","height","TextError","visible","backgroundImage","registerModalImage","top","right","minHeight","display","alignItems","flexDirection","justifyContent","children","path","onError","getState","http","post","url","res","handleErrors"],"mappings":"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","file":"components-modals-TrialModal.3f80b04bce01c3363d07.js","sourcesContent":["import React from \"react\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\n\r\nexport default (props) => {\r\n  const { color = \"#00acf0\" } = props;\r\n  return <BounceLoader color={color} />;\r\n};\r\n","import React from \"react\";\r\n\r\nimport PhoneInput from \"react-phone-input-2\";\r\n\r\nconst MyInput = (props) => {\r\n  const { error, label, className, onChange, onChangeFormik } = props;\r\n  let classes = className + \" form-control form-control-alternative text-black\";\r\n  if (error) {\r\n    classes = classes + \" border border-danger\";\r\n  }\r\n  return (\r\n    <>\r\n      {label && <Label className=\"form-control-label\">{label}</Label>}\r\n      <PhoneInput\r\n        country={\"pk\"}\r\n        prefix=\"+\"\r\n        inputClass={classes}\r\n        {...props}\r\n        specialLabel=\"\"\r\n        onChange={(phoneNumber) => {\r\n          if (phoneNumber.charAt(0) !== \"+\") phoneNumber = `+${phoneNumber}`;\r\n          onChange(phoneNumber);\r\n        }}\r\n      />\r\n\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyInput;\r\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Modal, Row, Col } from \"react-bootstrap\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport TextError from \"../../shared/TextError\";\nimport PhoneInput from \"../PhoneInput\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Loader from \"../Loader\";\n//redux actions\nimport { setTrialModalVisibility } from \"../../store/ui/trialModal\";\nimport { requestTrialApi } from \"../../store/api/trialRequests\";\n\nfunction RegisterModal(props) {\n  //accessing state from redux\n  const trialModal = useSelector((state) => state.ui.trialModal);\n  const commonData = useSelector((state) => state.ui.commonData);\n\n  const dispatch = useDispatch();\n  //loader\n  const [showLoader, setShowLoader] = useState(false);\n  const [showCompletion, setShowCompletion] = useState(false);\n  const closeModal = () => {\n    dispatch(setTrialModalVisibility(false));\n    setShowCompletion(false);\n  };\n\n  const onSubmit = (body) => {\n    setShowLoader(true);\n\n    dispatch(\n      requestTrialApi({\n        body,\n        onSuccess: () => {\n          setShowCompletion(true);\n        },\n        onEnd: () => {\n          setShowLoader(false);\n        },\n      })\n    );\n  };\n\n  //overlapping Loader\n  const renderLoader = () => {\n    return (\n      <div className=\"overlapping-loader\">\n        <Loader />\n      </div>\n    );\n  };\n\n  const renderTrialForm = () => {\n    return (\n      <Formik\n        initialValues={{\n          name: \"\",\n          phoneNumber: \"\",\n          email: \"\",\n        }}\n        onSubmit={onSubmit}\n        validationSchema={Yup.object({\n          name: Yup.string().required(\"Name is required.\"),\n          phoneNumber: Yup.string().required(\"Phone number is required.\"),\n          email: Yup.string()\n            .required(\"Email is required.\")\n            .email(\"Enter a valid email.\")\n            .typeError(\"Email is required.\"),\n        })}\n      >\n        {({ values, setFieldValue }) => {\n          return (\n            <Form>\n              <div className=\"d-flex\">\n                <div\n                  className=\"form-group\"\n                  style={{ flexGrow: 1, height: \"58px\" }}\n                >\n                  <div className=\"covering\">\n                    <Field\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Name\"\n                      name=\"name\"\n                    />\n                    <ErrorMessage name=\"name\" component={TextError} />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group\">\n                <div className=\"covering\">\n                  <Field\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Email\"\n                    name=\"email\"\n                  />\n                  <ErrorMessage name=\"email\" component={TextError} />\n                </div>\n              </div>\n\n              <div className=\"d-flex\">\n                <div\n                  className=\"form-group\"\n                  style={{ flexGrow: 1, height: \"58px\" }}\n                >\n                  <div className=\"covering\">\n                    <PhoneInput\n                      value={values.phoneNumber}\n                      placeholder=\"Phone\"\n                      onChange={(phoneNumber) => {\n                        setFieldValue(\"phoneNumber\", phoneNumber);\n                      }}\n                    />\n                    <ErrorMessage name=\"phoneNumber\" component={TextError} />\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"form-group margin\">\n                <button type=\"submit\" className=\"btn btn-default\">\n                  Submit\n                </button>\n              </div>\n            </Form>\n          );\n        }}\n      </Formik>\n    );\n  };\n\n  return (\n    <Modal show={trialModal.visible} onHide={closeModal}>\n      <section className=\" login-container\">\n        <Row className=\"bg no-gutters\">\n          <Col md=\"6\" className=\"img\">\n            <div\n              className=\"w-100 h-100 img-fill\"\n              style={{\n                backgroundImage: `url(\"${commonData.registerModalImage}\")`,\n              }}\n            ></div>\n          </Col>\n\n          <Col md=\"6\" className=\"align-self-center position-relative\">\n            <a\n              onClick={closeModal}\n              className=\"position-absolute\"\n              style={{ top: 10, right: 15 }}\n            >\n              <i className=\"fas fa-times\"></i>\n            </a>\n            {showLoader && renderLoader()}\n\n            <div className=\"popup-form-wrapper\" style={{ minHeight: \"400px\" }}>\n              {!showCompletion ? (\n                <>\n                  <h3 className=\"text-center\">Request Your Free Trial Now</h3>\n                  {renderTrialForm()}\n                </>\n              ) : (\n                <div\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    height: \"360px\",\n                  }}\n                >\n                  <h2 className=\"text-center\">\n                    Your request has been submitted.\n                  </h2>\n                  <p className=\"text-center\">\n                    Our support team will contact you soon.\n                  </p>\n                </div>\n              )}\n            </div>\n          </Col>\n        </Row>\n      </section>\n    </Modal>\n  );\n}\n\nexport default RegisterModal;\n","import React from \"react\";\r\n\r\nfunction TextError(props) {\r\n  return (\r\n    <>{props.children && <div className=\"error mr-3\">{props.children}</div>}</>\r\n  );\r\n}\r\n\r\nexport default TextError;\r\n","import http from \"../../services/http\";\nimport { handleErrors } from \"../../helpers/error\";\n\nconst path = \"/trial_requests\";\n\nexport const requestTrialApi = ({ body = {}, onSuccess, onError, onEnd }) => {\n  return async (dispatch, getState) => {\n    try {\n      const res = await http.post({\n        url: path,\n        body,\n      });\n      if (onSuccess) onSuccess(res);\n    } catch (err) {\n      //onError event firing\n      if (onError) onError(err);\n      else handleErrors(err);\n    } finally {\n      if (onEnd) onEnd();\n    }\n  };\n};\n"],"sourceRoot":""}