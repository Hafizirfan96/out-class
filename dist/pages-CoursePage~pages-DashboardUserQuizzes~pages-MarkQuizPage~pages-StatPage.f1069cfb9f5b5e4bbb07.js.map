{"version":3,"sources":["webpack:///./client/store/api/quizes.js"],"names":["path","getQuizWithAnswer","id","onSuccess","onError","onEnd","dispatch","getState","storeState","token","auth","http","get","url","headers","res","handleErrors","getCourseQuizes","answerQuiz","body","post","assignMarksToQuiz","getCourseQuizAnswers"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA,IAAMA,IAAI,GAAG,SAAb;AAEO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAKtB;AAAA,iFAAP,EAAO;AAAA,qBAJTC,EAIS;AAAA,MAJTA,EAIS,wBAJJ,EAII;AAAA,MAHTC,SAGS,QAHTA,SAGS;AAAA,MAFTC,OAES,QAFTA,OAES;AAAA,MADTC,KACS,QADTA,KACS;;AACT;AAAA,wEAAO,iBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,wBADD,GACcD,QAAQ,EADtB;AAEGE,mBAFH,GAEaD,UAAU,CAACE,IAFxB,CAEGD,KAFH;AAAA;AAAA;AAAA,qBAKeE,sDAAI,CAACC,GAAL,CAAS;AACzBC,mBAAG,EAAEb,IAAI,GAAG,wBAAP,GAAkCE,EADd;AAEzBY,uBAAO,EAAE;AACP,kCAAgBL;AADT;AAFgB,eAAT,CALf;;AAAA;AAKGM,iBALH;AAWH;AACA,kBAAIZ,SAAJ,EAAeA,SAAS,CAACY,GAAD,CAAT;AAZZ;AAAA;;AAAA;AAAA;AAAA;AAcH;AACA,kBAAIX,OAAJ,EAAaA,OAAO,aAAP,CAAb,KACKY,mEAAY,aAAZ;;AAhBF;AAAA;AAkBH,kBAAIX,KAAJ,EAAWA,KAAK;AAlBb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAqBD,CA3BM;AA6BA,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,GAKpB;AAAA,kFAAP,EAAO;AAAA,uBAJTf,EAIS;AAAA,MAJTA,EAIS,yBAJJ,EAII;AAAA,MAHTC,SAGS,SAHTA,SAGS;AAAA,MAFTC,OAES,SAFTA,OAES;AAAA,MADTC,KACS,SADTA,KACS;;AACT;AAAA,wEAAO,kBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,wBADD,GACcD,QAAQ,EADtB;AAEGE,mBAFH,GAEaD,UAAU,CAACE,IAFxB,CAEGD,KAFH;AAAA;AAAA;AAAA,qBAKeE,sDAAI,CAACC,GAAL,CAAS;AACzBC,mBAAG,EAAEb,IAAI,GAAG,kBAAP,GAA4BE,EADR;AAEzBY,uBAAO,EAAE;AACP,kCAAgBL;AADT;AAFgB,eAAT,CALf;;AAAA;AAKGM,iBALH;AAWH;AACA,kBAAIZ,SAAJ,EAAeA,SAAS,CAACY,GAAD,CAAT;AAZZ;AAAA;;AAAA;AAAA;AAAA;AAcH;AACA,kBAAIX,OAAJ,EAAaA,OAAO,cAAP,CAAb,KACKY,mEAAY,cAAZ;;AAhBF;AAAA;AAkBH,kBAAIX,KAAJ,EAAWA,KAAK;AAlBb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAqBD,CA3BM;AA6BA,IAAMa,UAAU,GAAG,SAAbA,UAAa,GAMf;AAAA,kFAAP,EAAO;AAAA,uBALThB,EAKS;AAAA,MALTA,EAKS,yBALJ,EAKI;AAAA,yBAJTiB,IAIS;AAAA,MAJTA,IAIS,2BAJF,EAIE;AAAA,MAHThB,SAGS,SAHTA,SAGS;AAAA,MAFTC,OAES,SAFTA,OAES;AAAA,MADTC,KACS,SADTA,KACS;;AACT;AAAA,wEAAO,kBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,wBADD,GACcD,QAAQ,EADtB;AAEGE,mBAFH,GAEaD,UAAU,CAACE,IAFxB,CAEGD,KAFH;AAAA;AAAA;AAAA,qBAKeE,sDAAI,CAACS,IAAL,CAAU;AAC1BP,mBAAG,EAAEb,IAAI,GAAG,eAAP,GAAyBE,EADJ;AAE1BiB,oBAAI,EAAJA,IAF0B;AAG1BL,uBAAO,EAAE;AACP,kCAAgBL;AADT;AAHiB,eAAV,CALf;;AAAA;AAKGM,iBALH;AAYH;AACA,kBAAIZ,SAAJ,EAAeA,SAAS,CAACY,GAAD,CAAT;AAbZ;AAAA;;AAAA;AAAA;AAAA;AAeH;AACA,kBAAIX,OAAJ,EAAaA,OAAO,cAAP,CAAb,KACKY,mEAAY,cAAZ;;AAjBF;AAAA;AAmBH,kBAAIX,KAAJ,EAAWA,KAAK;AAnBb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAsBD,CA7BM,C,CA8BP;;AAEO,IAAMgB,iBAAiB,GAAG,SAApBA,iBAAoB,GAMtB;AAAA,kFAAP,EAAO;AAAA,uBALTnB,EAKS;AAAA,MALTA,EAKS,yBALJ,EAKI;AAAA,yBAJTiB,IAIS;AAAA,MAJTA,IAIS,2BAJF,EAIE;AAAA,MAHThB,SAGS,SAHTA,SAGS;AAAA,MAFTC,OAES,SAFTA,OAES;AAAA,MADTC,KACS,SADTA,KACS;;AACT;AAAA,wEAAO,kBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,wBADD,GACcD,QAAQ,EADtB;AAEGE,mBAFH,GAEaD,UAAU,CAACE,IAFxB,CAEGD,KAFH;AAAA;AAAA;AAAA,qBAKeE,sDAAI,CAACS,IAAL,CAAU;AAC1BP,mBAAG,EAAEb,IAAI,GAAG,oBAAP,GAA8BE,EADT;AAE1BiB,oBAAI,EAAJA,IAF0B;AAG1BL,uBAAO,EAAE;AACP,kCAAgBL;AADT;AAHiB,eAAV,CALf;;AAAA;AAKGM,iBALH;AAYH;AACA,kBAAIZ,SAAJ,EAAeA,SAAS,CAACY,GAAD,CAAT;AAbZ;AAAA;;AAAA;AAAA;AAAA;AAeH;AACA,kBAAIX,OAAJ,EAAaA,OAAO,cAAP,CAAb,KACKY,mEAAY,cAAZ;;AAjBF;AAAA;AAmBH,kBAAIX,KAAJ,EAAWA,KAAK;AAnBb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAsBD,CA7BM,C,CA+BP;;AAEO,IAAMiB,oBAAoB,GAAG,SAAvBA,oBAAuB,GAKzB;AAAA,kFAAP,EAAO;AAAA,uBAJTpB,EAIS;AAAA,MAJTA,EAIS,yBAJJ,EAII;AAAA,MAHTC,SAGS,SAHTA,SAGS;AAAA,MAFTC,OAES,SAFTA,OAES;AAAA,MADTC,KACS,SADTA,KACS;;AACT;AAAA,yEAAO,kBAAOC,QAAP,EAAiBC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,wBADD,GACcD,QAAQ,EADtB;AAEGE,mBAFH,GAEaD,UAAU,CAACE,IAFxB,CAEGD,KAFH;AAAA;AAAA;AAAA,qBAKeE,sDAAI,CAACC,GAAL,CAAS;AACzBC,mBAAG,EAAEb,IAAI,GAAG,uBAAP,GAAiCE,EADb;AAEzBY,uBAAO,EAAE;AACP,kCAAgBL;AADT;AAFgB,eAAT,CALf;;AAAA;AAKGM,iBALH;AAWH;AACA,kBAAIZ,SAAJ,EAAeA,SAAS,CAACY,GAAD,CAAT;AAZZ;AAAA;;AAAA;AAAA;AAAA;AAcH;AACA,kBAAIX,OAAJ,EAAaA,OAAO,cAAP,CAAb,KACKY,mEAAY,cAAZ;;AAhBF;AAAA;AAkBH,kBAAIX,KAAJ,EAAWA,KAAK;AAlBb;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAqBD,CA3BM,C","file":"pages-CoursePage~pages-DashboardUserQuizzes~pages-MarkQuizPage~pages-StatPage.f1069cfb9f5b5e4bbb07.js","sourcesContent":["import http from \"../../services/http\";\r\nimport { handleErrors } from \"../../helpers/error\";\r\n\r\nconst path = \"/quizes\";\r\n\r\nexport const getQuizWithAnswer = ({\r\n  id = \"\",\r\n  onSuccess,\r\n  onError,\r\n  onEnd,\r\n} = {}) => {\r\n  return async (dispatch, getState) => {\r\n    const storeState = getState();\r\n    const { token } = storeState.auth;\r\n    try {\r\n      //showing loader on ui\r\n      const res = await http.get({\r\n        url: path + \"/get_quiz_with_answer/\" + id,\r\n        headers: {\r\n          \"x-auth-token\": token,\r\n        },\r\n      });\r\n      //onSuccess event firing\r\n      if (onSuccess) onSuccess(res);\r\n    } catch (err) {\r\n      //onError event firing\r\n      if (onError) onError(err);\r\n      else handleErrors(err);\r\n    } finally {\r\n      if (onEnd) onEnd();\r\n    }\r\n  };\r\n};\r\n\r\nexport const getCourseQuizes = ({\r\n  id = \"\",\r\n  onSuccess,\r\n  onError,\r\n  onEnd,\r\n} = {}) => {\r\n  return async (dispatch, getState) => {\r\n    const storeState = getState();\r\n    const { token } = storeState.auth;\r\n    try {\r\n      //showing loader on ui\r\n      const res = await http.get({\r\n        url: path + \"/course_quizzes/\" + id,\r\n        headers: {\r\n          \"x-auth-token\": token,\r\n        },\r\n      });\r\n      //onSuccess event firing\r\n      if (onSuccess) onSuccess(res);\r\n    } catch (err) {\r\n      //onError event firing\r\n      if (onError) onError(err);\r\n      else handleErrors(err);\r\n    } finally {\r\n      if (onEnd) onEnd();\r\n    }\r\n  };\r\n};\r\n\r\nexport const answerQuiz = ({\r\n  id = \"\",\r\n  body = {},\r\n  onSuccess,\r\n  onError,\r\n  onEnd,\r\n} = {}) => {\r\n  return async (dispatch, getState) => {\r\n    const storeState = getState();\r\n    const { token } = storeState.auth;\r\n    try {\r\n      //showing loader on ui\r\n      const res = await http.post({\r\n        url: path + \"/answer_quiz/\" + id,\r\n        body,\r\n        headers: {\r\n          \"x-auth-token\": token,\r\n        },\r\n      });\r\n      //onSuccess event firing\r\n      if (onSuccess) onSuccess(res);\r\n    } catch (err) {\r\n      //onError event firing\r\n      if (onError) onError(err);\r\n      else handleErrors(err);\r\n    } finally {\r\n      if (onEnd) onEnd();\r\n    }\r\n  };\r\n};\r\n//\r\n\r\nexport const assignMarksToQuiz = ({\r\n  id = \"\",\r\n  body = {},\r\n  onSuccess,\r\n  onError,\r\n  onEnd,\r\n} = {}) => {\r\n  return async (dispatch, getState) => {\r\n    const storeState = getState();\r\n    const { token } = storeState.auth;\r\n    try {\r\n      //showing loader on ui\r\n      const res = await http.post({\r\n        url: path + \"/mark_quiz_answer/\" + id,\r\n        body,\r\n        headers: {\r\n          \"x-auth-token\": token,\r\n        },\r\n      });\r\n      //onSuccess event firing\r\n      if (onSuccess) onSuccess(res);\r\n    } catch (err) {\r\n      //onError event firing\r\n      if (onError) onError(err);\r\n      else handleErrors(err);\r\n    } finally {\r\n      if (onEnd) onEnd();\r\n    }\r\n  };\r\n};\r\n\r\n//\r\n\r\nexport const getCourseQuizAnswers = ({\r\n  id = \"\",\r\n  onSuccess,\r\n  onError,\r\n  onEnd,\r\n} = {}) => {\r\n  return async (dispatch, getState) => {\r\n    const storeState = getState();\r\n    const { token } = storeState.auth;\r\n    try {\r\n      //showing loader on ui\r\n      const res = await http.get({\r\n        url: path + \"/course_quiz_answers/\" + id,\r\n        headers: {\r\n          \"x-auth-token\": token,\r\n        },\r\n      });\r\n      //onSuccess event firing\r\n      if (onSuccess) onSuccess(res);\r\n    } catch (err) {\r\n      //onError event firing\r\n      if (onError) onError(err);\r\n      else handleErrors(err);\r\n    } finally {\r\n      if (onEnd) onEnd();\r\n    }\r\n  };\r\n};\r\n"],"sourceRoot":""}