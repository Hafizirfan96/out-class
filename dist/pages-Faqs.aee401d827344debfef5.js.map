{"version":3,"sources":["webpack:///./client/components/Loader.js","webpack:///./client/pages/Faqs.js","webpack:///./client/store/api/faqs.js"],"names":["props","color","MyOrdersTable","loadable","ssr","MyOrders","dispatch","useDispatch","useState","showLoader","setShowLoader","currentTab","setCurrentTab","activeFaq","setActiveFaq","faqs","setFaqs","useEffect","loadFaqs","onSuccess","res","data","onEnd","renderLoader","renderList","tabName","filter","f","map","faq","faqIndex","_id","question","answer","renderHTML","minHeight","path","onError","getState","http","get","url","console","log","handleErrors"],"mappings":"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","file":"pages-Faqs.aee401d827344debfef5.js","sourcesContent":["import React from \"react\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\n\r\nexport default (props) => {\r\n  const { color = \"#00acf0\" } = props;\r\n  return <BounceLoader color={color} />;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport loadable from \"@loadable/component\";\r\nimport { loadFaqs } from \"../store/api/faqs\";\r\nimport Loader from \"../components/Loader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport renderHTML from \"react-render-html\";\r\n\r\nconst MyOrdersTable = loadable(\r\n  () => import(\"../components/Tables/MyOrderTable\"),\r\n  {\r\n    ssr: false,\r\n  }\r\n);\r\n\r\nconst MyOrders = (props) => {\r\n  const dispatch = useDispatch();\r\n  //   const cart = useSelector((state) => state.entities.cart);\r\n\r\n  const [showLoader, setShowLoader] = useState(false);\r\n  const [currentTab, setCurrentTab] = useState(\"student\");\r\n  const [activeFaq, setActiveFaq] = useState(\"\");\r\n  const [faqs, setFaqs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    setShowLoader(true);\r\n    dispatch(\r\n      loadFaqs({\r\n        onSuccess: (res) => {\r\n          setFaqs(res.data.data);\r\n        },\r\n        onEnd: () => {\r\n          setShowLoader(false);\r\n        },\r\n      })\r\n    );\r\n  }, []);\r\n  //overlapping Loader\r\n  const renderLoader = () => {\r\n    return (\r\n      <div className=\"overlapping-loader\">\r\n        <Loader />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderList = () => {\r\n    let tabName = \"Students\";\r\n\r\n    if (currentTab === \"student\") {\r\n      tabName = \"Students\";\r\n    } else if (currentTab === \"parent\") {\r\n      tabName = \"Parents\";\r\n    } else if (currentTab === \"teacher\") {\r\n      tabName = \"Teachers\";\r\n    }\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"tab-content\" id=\"cuorses_list\">\r\n          <div\r\n            className=\"tab-pane fade show active\"\r\n            id=\"students\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"students-tab\"\r\n          >\r\n            <section className=\"faqs_detail\">\r\n              <div className=\"student_faqs\">\r\n                <div className=\"container\">\r\n                  <h2>{tabName}</h2>\r\n                  <div className=\"accordion\" id=\"accordionExample\">\r\n                    {faqs\r\n                      .filter((f) => f[currentTab])\r\n                      .map((faq, faqIndex) => {\r\n                        return (\r\n                          <div\r\n                            className={\r\n                              activeFaq === faq._id ? \"card active\" : \"card\"\r\n                            }\r\n                            key={faq._id}\r\n                          >\r\n                            <div className=\"card-header\" id=\"headingOne\">\r\n                              <h2 className=\"mb-0\">\r\n                                <button\r\n                                  className=\"btn btn-block text-left collapsed\"\r\n                                  type=\"button\"\r\n                                  data-toggle=\"collapse\"\r\n                                  data-target=\"#collapseOne\"\r\n                                  aria-expanded={\r\n                                    activeFaq === faq._id ? \"true\" : \"false\"\r\n                                  }\r\n                                  aria-controls=\"collapseOne\"\r\n                                  onClick={() => {\r\n                                    if (activeFaq !== faq._id)\r\n                                      setActiveFaq(faq._id);\r\n                                    else setActiveFaq(\"\");\r\n                                  }}\r\n                                >\r\n                                  {faq.question}\r\n                                </button>\r\n                              </h2>\r\n                            </div>\r\n\r\n                            <div\r\n                              id=\"collapseOne\"\r\n                              className={\r\n                                activeFaq === faq._id\r\n                                  ? \"collapse show\"\r\n                                  : \"collapse\"\r\n                              }\r\n                              aria-labelledby=\"headingOne\"\r\n                              data-parent=\"#accordionExample\"\r\n                            >\r\n                              <div className=\"card-body\">\r\n                                {faq.answer && renderHTML(faq.answer)}\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        );\r\n                      })}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </section>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <section className=\"other_banner\">\r\n        <div className=\"container\">\r\n          <h1>FAQ’s</h1>\r\n\r\n          <nav aria-label=\"breadcrumb\">\r\n            <ol className=\"breadcrumb\">\r\n              <li className=\"breadcrumb-item\">\r\n                <Link to=\"/\">Home</Link>\r\n              </li>\r\n              <li className=\"breadcrumb-item active\">FAQ’s</li>\r\n            </ol>\r\n          </nav>\r\n        </div>\r\n      </section>\r\n      <div className=\"position-relative\" style={{ minHeight: \"200px\" }}>\r\n        {showLoader ? (\r\n          renderLoader()\r\n        ) : (\r\n          <section className=\"popular p-0\">\r\n            <div className=\"bg_cover  p-0\">\r\n              <div className=\"container\">\r\n                <ul className=\"nav nav-tabs\" id=\"courseTab\" role=\"tablist\">\r\n                  <li className=\"nav-item\" role=\"presentation\">\r\n                    <a\r\n                      className={\r\n                        currentTab === \"student\"\r\n                          ? \"nav-link active\"\r\n                          : \"nav-link\"\r\n                      }\r\n                      onClick={() => {\r\n                        setCurrentTab(\"student\");\r\n                      }}\r\n                      id=\"students-tab\"\r\n                      data-toggle=\"tab\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"students\"\r\n                      aria-selected=\"true\"\r\n                    >\r\n                      Students\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\" role=\"presentation\">\r\n                    <a\r\n                      className={\r\n                        currentTab === \"teacher\"\r\n                          ? \"nav-link active\"\r\n                          : \"nav-link\"\r\n                      }\r\n                      onClick={() => {\r\n                        setCurrentTab(\"teacher\");\r\n                      }}\r\n                      id=\"teachers-tab\"\r\n                      data-toggle=\"tab\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"teachers\"\r\n                      aria-selected=\"true\"\r\n                    >\r\n                      Teachers\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"nav-item\" role=\"presentation\">\r\n                    <a\r\n                      className={\r\n                        currentTab === \"parent\" ? \"nav-link active\" : \"nav-link\"\r\n                      }\r\n                      onClick={() => {\r\n                        setCurrentTab(\"parent\");\r\n                      }}\r\n                      id=\"parents-tab\"\r\n                      data-toggle=\"tab\"\r\n                      role=\"tab\"\r\n                      aria-controls=\"parents\"\r\n                      aria-selected=\"true\"\r\n                    >\r\n                      Parents\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            {renderList()}\r\n          </section>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MyOrders;\r\n","import http from \"../../services/http\";\r\nimport { handleErrors } from \"../../helpers/error\";\r\n\r\nconst path = \"/cms/faqs\";\r\n\r\nexport const loadFaqs = ({ onSuccess, onError, onEnd } = {}) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      //showing loader on ui\r\n      const res = await http.get({ url: path });\r\n\r\n      //onSuccess event firing\r\n      if (onSuccess) onSuccess(res);\r\n    } catch (err) {\r\n      //onError event firing\r\n      console.log(\"Error => \", err);\r\n      if (onError) onError(err);\r\n      else handleErrors(err);\r\n    } finally {\r\n      if (onEnd) onEnd();\r\n    }\r\n  };\r\n};\r\n"],"sourceRoot":""}